{"version":3,"sources":["redux/utils.js","redux/types.js","redux/store.js","redux/actions.js","components/Header.jsx","components/DesktopTable.jsx","components/MobileTable.jsx","App.jsx","index.jsx"],"names":["routes","SET_NEWS","SET_NEWEST","SET_JOBS","SET_ASK","SET_SHOW","initialState","data","page","canLoadMore","reducers","forEach","element","name","state","action","type","actions","toUpperCase","length","store","createStore","combineReducers","applyMiddleware","thunk","logger","getData","route","dispatch","getState","axios","get","then","response","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","useState","isOpen","setIsOpen","className","SwipeableDrawer","anchor","open","onClose","onOpen","List","component","aria-label","map","item","ListItem","button","Link","to","onClick","ListItemText","primary","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","columns","field","headerName","width","DesktopTable","dispatchData","newsMap","time","Date","toLocaleTimeString","style","height","rows","loading","onCellClick","cell","window","value","focus","onRowsScrollEnd","hideFooterPagination","MobileTable","sort","setSort","dataLength","next","setTimeout","hasMore","scrollThreshold","a","b","id","Button","App","useLocation","pathname","slice","useSelector","useDispatch","useEffect","queries","small","large","matches","LinearProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1321e06c.chunk.js","sourcesContent":["export const routes = ['news', 'newest', 'ask', 'show', 'jobs'];\n","export const SET_NEWS = 'SET_NEWS';\nexport const SET_NEWEST = 'SET_NEWEST';\nexport const SET_JOBS = 'SET_JOBS';\nexport const SET_ASK = 'SET_ASK';\nexport const SET_SHOW = 'SET_SHOW';\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { routes } from './utils';\nimport * as actions from './types';\n\nconst initialState = {\n  data: [],\n  page: 0,\n  canLoadMore: true,\n};\n\nconst getReducer = (name) => (state = initialState, action) => {\n  switch (action.type) {\n    case actions[`SET_${name.toUpperCase()}`]:\n      return {\n        ...state,\n        data: [...state.data, ...action.data],\n        page: state.page + 1,\n        canLoadMore: !!action.data.length,\n      };\n    default:\n      return state;\n  }\n};\n\nconst reducers = {};\n\nroutes.forEach((element) => {\n  reducers[element] = getReducer(element);\n});\n\nexport const store = createStore(combineReducers(reducers), applyMiddleware(thunk, logger));\n","import axios from 'axios';\nimport * as actions from './types';\n\nexport const setData = (data, which) => ({\n  type: actions[`SET_${which.toUpperCase()}`],\n  data,\n});\n\nexport function getData(route) {\n  return (dispatch, getState) => {\n    const state = getState();\n\n    return axios.get(`https://api.hnpwa.com/v0/${route}/${state[route].page + 1}.json`)\n      .then((response) => dispatch(setData(response.data, route)));\n  };\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport function Header({ route, routes }) {\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <SwipeableDrawer\n        anchor=\"top\"\n        open={isOpen}\n        onClose={() => setIsOpen(false)}\n        onOpen={() => {}}\n      >\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          {routes.map((item) => (\n            <ListItem\n              key={item}\n              button\n              component={Link}\n              to={item}\n              onClick={() => setIsOpen(false)}\n            >\n              <ListItemText primary={item} />\n            </ListItem>\n          ))}\n        </List>\n      </SwipeableDrawer>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton onClick={() => setIsOpen(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {route.toUpperCase()}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  route: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import * as React from 'react';\nimport { XGrid } from '@material-ui/x-grid';\nimport PropTypes from 'prop-types';\n\nconst columns = [\n  { field: 'time', headerName: 'Time', width: '20%' },\n  { field: 'title', headerName: 'Title', width: '40%' },\n  { field: 'url', headerName: 'URL', width: '40%' },\n];\n\nexport function DesktopTable({ dispatchData, data, canLoadMore }) {\n  const newsMap = data.map((item) => ({\n    ...item,\n    time: new Date(item.time).toLocaleTimeString('en-US'),\n  }));\n\n  return (\n    <div style={{ height: '90vh', width: '100%' }}>\n      <XGrid\n        columns={columns}\n        rows={newsMap}\n        loading={false}\n        onCellClick={(cell) => {\n          if (cell.field === 'url') window.open(cell.value, '_blank').focus();\n        }}\n        onRowsScrollEnd={() => {\n          if (canLoadMore) {\n            dispatchData();\n          }\n        }}\n        hideFooterPagination\n      />\n    </div>\n  );\n}\n\nDesktopTable.propTypes = {\n  dispatchData: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    time: PropTypes.number,\n    title: PropTypes.string,\n    url: PropTypes.string,\n  })).isRequired,\n  canLoadMore: PropTypes.bool.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nexport function MobileTable({ data, dispatchData }) {\n  const [sort, setSort] = useState(true);\n\n  return (\n    <>\n      <InfiniteScroll\n        dataLength={data.length}\n        next={() => setTimeout(() => {\n          dispatchData();\n        }, 200)}\n        hasMore\n        scrollThreshold=\"20px\"\n      >\n        <div className=\"mobile__list\">\n          {data.sort((a, b) => (sort ? a.time - b.time : b.time - a.time))\n            .map((item) => (\n              <div className=\"mobile__list_item\" key={item.id}>\n                {item.title}\n              </div>\n            ))}\n        </div>\n        <Button\n          className=\"btn__sort\"\n          variant=\"contained\"\n          onClick={() => setSort(!sort)}\n        >\n          Sort by Date\n        </Button>\n      </InfiniteScroll>\n    </>\n  );\n}\n\nMobileTable.propTypes = {\n  dispatchData: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    time: PropTypes.number,\n    title: PropTypes.string,\n  })).isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Media from 'react-media';\nimport { LinearProgress } from '@material-ui/core';\n\nimport { getData } from './redux/actions';\nimport { routes } from './redux/utils';\n\nimport { Header } from './components/Header';\nimport { DesktopTable } from './components/DesktopTable';\nimport { MobileTable } from './components/MobileTable';\n\nimport './App.css';\n\nfunction App() {\n  const { pathname } = useLocation();\n  const route = pathname.slice(1);\n  const { data, canLoadMore } = useSelector((state) => state[route] || {});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (data) dispatch(getData(route));\n    }, 1000);\n  }, [route]);\n\n  if (!data) return <Redirect to=\"/news\" />;\n\n  if (!data.length) return <LinearProgress />;\n\n  return (\n    <div className=\"App\">\n      <Header route={route} routes={routes} />\n      <Media queries={{\n        small: '(max-width: 599px)',\n        large: '(min-width: 600px)',\n      }}\n      >\n        {(matches) => (\n          <>\n            {matches.small && (\n            <MobileTable\n              dispatchData={() => dispatch(getData(route))}\n              data={data}\n            />\n            )}\n            {matches.large && (\n            <DesktopTable\n              dispatchData={() => dispatch(getData(route))}\n              data={data}\n              canLoadMore={canLoadMore}\n            />\n            )}\n          </>\n        )}\n      </Media>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}